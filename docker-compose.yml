version: "3.0"
services:
  database:
    image: build.datapunt.amsterdam.nl:5000/atlas/postgres
    ports:
      - "5404:5432"
    environment:
      POSTGRES_DB: grondexploitatie
      POSTGRES_USER: grondexploitatie
      POSTGRES_PASSWORD: insecure

  web:
    build: src/
    ports:
      - "8000:8000"
    links:
      - database
    environment:
      UWSGI_HTTP: ":8000"
      UWSGI_MODULE: "grondexploitatie.wsgi"
      UWSGI_CALLABLE: "application"
      UWSGI_MASTER: 1
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
      SECRET_KEY: insecure
      DATABASE_NAME: grondexploitatie
      DATABASE_USER: grondexploitatie
      DATABASE_PASSWORD: insecure

  importer:
    image: grondexploitatie_web
    links:
      - database
    environment:
      GRONDEXPLOITATE_OBJECTSTORE_PASSWORD: ${GRONDEXPLOITATE_OBJECTSTORE_PASSWORD}
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_NAME: grondexploitatie
      DATABASE_USER: grondexploitatie
      DATABASE_PASSWORD: insecure
    command: >
      bash -c "/app/import/docker-wait.sh && \
               /app/import/docker-migrate.sh && \
               /app/import/import.sh"

  db-backup:
    image: build.datapunt.amsterdam.nl:5000/atlas/postgres
    links:
      - database
    volumes:
      - ./backups:/tmp/backups
    command: >
      bash -c "echo database:5432:grondexploitatie:grondexploitatie:insecure > ~/.pgpass \
              && chmod 600 ~/.pgpass \
              && pg_dump --clean \
                          -Fc \
                          -t dataset* \
                          -t geo*  \
                          -t django_migrations  \
                          -T auth*    \
                          -U grondexploitatie \
                          -h database -p 5432 \
                          grondexploitatie > /tmp/backups/database.dump"
