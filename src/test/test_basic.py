from django.test import TestCase, Client
from django.db import transaction

from grondexploitatie.models import Planex

class TestViews(TestCase):
    # Basic test of the views
    def setUp(self):
        self.http_client = Client()

    def test_health_view(self):
        response = self.http_client.get('/status/health')
        assert response.status_code == 200
        assert response.content == b"Connectivity OK"

    def test_data_view(self):
        response = self.http_client.get('/status/data')
        assert response.status_code == 500
        assert response.content == b"Too few items in the database"

        with transaction.atomic():
            for i in range(1, 50000):
                planex = Planex(index=i)
                planex.save()

        response = self.http_client.get('/status/data')
        assert response.status_code == 500
        assert response.content == b"Too few items in the database"

        planex = Planex(index=50000)
        planex.save()

        response = self.http_client.get('/status/data')
        assert response.status_code == 200
        assert response.content == b"Data OK"

    def test_projects(self):
        response = self.http_client.get('/grondexploitatie/projects/')
        assert response.status_code == 401
        assert response.content == b"Unauthorized"

    def test_project(self):
        response = self.http_client.get('/grondexploitatie/project/12345/')
        assert response.status_code == 401
        assert response.content == b"Unauthorized"

    def test_swagger(self):
        response = self.http_client.get('/grondexploitatie/api-docs/openapi.yml')
        assert response.status_code == 200
        assert 'swagger: "2.0"' in str(response.content)
