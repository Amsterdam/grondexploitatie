#!/usr/bin/env bash

set -e   # stop on any error

# Allow for local and global execution (default)
EXEC_FOR=${1:-global}

set -u   # crash on missing env variables

if [ $EXEC_FOR = "local" ]
then
    # Define location for processing scripts
    export GRONDEXPLOITATIE_MAIN_DIR=`cd ..; pwd`
    # Define location for saving data files
    export GRONDEXPLOITATIE_DATA_DIR=${GRONDEXPLOITATIE_MAIN_DIR}/data/
    DATABASE_HOST=localhost
    DATABASE_PORT=5404
    DATABASE_NAME=grondexploitatie
    DATABASE_USER=grondexploitatie
    DATABASE_PASSWORD=insecure
else
    # Define location for processing scripts
    export GRONDEXPLOITATIE_MAIN_DIR=/app
    # Define location for saving data files
    export GRONDEXPLOITATIE_DATA_DIR=/tmp/data/
fi

export GRONDEXPLOITATIE_IMPORT_DIR=${GRONDEXPLOITATIE_MAIN_DIR}/import
export PYTHONPATH=${GRONDEXPLOITATIE_MAIN_DIR}

echo "Main dir: $GRONDEXPLOITATIE_MAIN_DIR"
echo "Data dir: $GRONDEXPLOITATIE_DATA_DIR"

# Provide for a location to extract and process data files
mkdir -p $GRONDEXPLOITATIE_DATA_DIR

# The import scripts are located in the import folder
cd $GRONDEXPLOITATIE_IMPORT_DIR

export GREX_SHAPES_BASE_NAME=grex_grenzen20180320
export PLANEX_FILE=dump-planex-20180620.xlsx
export MAPPING_FILE=Mappingbestand\ rapportage\ kosten\ baten\ v2.csv

# Download the data files
python download_objectstore_files.py


# Extract the data files
cd $GRONDEXPLOITATIE_DATA_DIR
tar xzvf ${GREX_SHAPES_BASE_NAME}.tgz


# Convert MapInfo files to PostGIS SQL dump file
ogr2ogr -f "PGDump" -nlt GEOMETRY ${GRONDEXPLOITATIE_DATA_DIR}${GREX_SHAPES_BASE_NAME}.sql \
                    ${GRONDEXPLOITATIE_DATA_DIR}${GREX_SHAPES_BASE_NAME}/GV_PLANNEN.shp

# Convert SQL file to utf-8 SQL file
iconv -f iso-8859-1 -t utf-8  ${GRONDEXPLOITATIE_DATA_DIR}${GREX_SHAPES_BASE_NAME}.sql \
                            > ${GRONDEXPLOITATIE_DATA_DIR}${GREX_SHAPES_BASE_NAME}.utf8.sql

sed -i -- 's/gv_plannen/grex_grenzen/g' ${GRONDEXPLOITATIE_DATA_DIR}${GREX_SHAPES_BASE_NAME}.utf8.sql

export PGPASSFILE=~/.pgpass_grondexploitatie
CREDENTIALS="${DATABASE_HOST}:${DATABASE_PORT}:${DATABASE_NAME}:${DATABASE_USER}:${DATABASE_PASSWORD}"
echo $CREDENTIALS > ${PGPASSFILE}
chmod 600 ${PGPASSFILE}

# Import in the database
cat ${GRONDEXPLOITATIE_DATA_DIR}${GREX_SHAPES_BASE_NAME}.utf8.sql | \
    psql -v ON_ERROR_STOP=1 -h ${DATABASE_HOST} -p ${DATABASE_PORT} -U ${DATABASE_USER} ${DATABASE_NAME}

# Continue in main folder to import Excel data
cd $GRONDEXPLOITATIE_MAIN_DIR

# Import Excel data in the database
python import/import_excel_data.py

# Continue in import folder for data fixes
cd $GRONDEXPLOITATIE_IMPORT_DIR

# Fix data problems
cat fix_data.sql | \
    psql -v ON_ERROR_STOP=1 -h ${DATABASE_HOST} -p ${DATABASE_PORT} -U ${DATABASE_USER} ${DATABASE_NAME}

# Create stadsdeel_begroot table
cat create_stadsdeel_begroot.sql | \
    psql -v ON_ERROR_STOP=1 -h ${DATABASE_HOST} -p ${DATABASE_PORT} -U ${DATABASE_USER} ${DATABASE_NAME}
