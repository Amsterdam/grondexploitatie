"""grondexploitatie URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/2.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, re_path, include

from rest_framework import response, schemas
from rest_framework.decorators import api_view, renderer_classes
from rest_framework.renderers import CoreJSONRenderer
from rest_framework_swagger.renderers import OpenAPIRenderer
from rest_framework_swagger.renderers import SwaggerUIRenderer

from grondexploitatie import views
from grondexploitatie import settings

grouped_url_patterns = {
    'base_patterns': [
        path('admin/', admin.site.urls),
        path('status/', include('grondexploitatie.health.urls')),
    ],
    'grondexploitatie_patterns': [
        path('grondexploitatie/projects/', views.ProjectList.as_view(), name='project_list'),
        re_path('^grondexploitatie/project/(?P<plannr>\d{5})/$', views.ProjectDetail.as_view(), name='project_detail'),
    ]
}


@api_view()
@renderer_classes([SwaggerUIRenderer, OpenAPIRenderer, CoreJSONRenderer])
def grondexploitatie_schema_view(request):
    generator = schemas.SchemaGenerator(
        title='Grondexploitatie API',
        patterns=grouped_url_patterns['grondexploitatie_patterns']
    )
    return response.Response(generator.get_schema(request=request))


urlpatterns = [path('docs/api-docs/grondexploitatie/',
                    grondexploitatie_schema_view),
               ] + [url for pattern_list in grouped_url_patterns.values()
                    for url in pattern_list]

if settings.DEBUG:
    import debug_toolbar

    urlpatterns.extend([
        path('__debug__/', include(debug_toolbar.urls)),
    ])
