# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.contrib.gis.db import models


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class GrexGrenzenOgagis2016(models.Model):
    ogc_fid = models.AutoField(primary_key=True)
    wkb_geometry = models.GeometryField(srid=0, blank=True, null=True)
    plannr = models.IntegerField(blank=True, null=True)
    plannaam = models.CharField(max_length=30, blank=True, null=True)
    planbeheer = models.CharField(max_length=1, blank=True, null=True)
    startdatum = models.CharField(max_length=20, blank=True, null=True)
    planstatus = models.CharField(max_length=1, blank=True, null=True)
    plansoort = models.CharField(max_length=1, blank=True, null=True)
    opp = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'grex_grenzen_ogagis_2016'


class MappingRapportage(models.Model):
    index = models.BigIntegerField(blank=True, null=True)
    cataloguspost = models.FloatField(blank=True, null=True)
    omschrijving = models.TextField(blank=True, null=True)
    rapportagepost = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mapping_rapportage'


class Planex(models.Model):
    index = models.BigIntegerField(blank=True, null=True)
    org_onderdeel = models.TextField(blank=True, null=True)
    project_code = models.TextField(blank=True, null=True)
    project_naam = models.TextField(blank=True, null=True)
    fonds = models.TextField(blank=True, null=True)
    fase = models.TextField(blank=True, null=True)
    begroting_naam = models.TextField(blank=True, null=True)
    label = models.TextField(blank=True, null=True)
    prijspeildatum = models.TextField(blank=True, null=True)
    boekingen_bijgewerkt_tot = models.TextField(blank=True, null=True)
    definitief_vastgesteld = models.TextField(blank=True, null=True)
    kosten_baten = models.TextField(blank=True, null=True)
    hoofdpost = models.TextField(blank=True, null=True)
    cataloguspost_nummer = models.TextField(blank=True, null=True)
    naam = models.TextField(blank=True, null=True)
    object = models.TextField(blank=True, null=True)
    kleur = models.TextField(blank=True, null=True)
    specificatie = models.TextField(blank=True, null=True)
    periode = models.BigIntegerField(blank=True, null=True)
    nw_begroot = models.FloatField(blank=True, null=True)
    nw_geboekt = models.FloatField(blank=True, null=True)
    progr_field = models.FloatField(db_column='progr#', blank=True, null=True)  # Field renamed to remove unsuitable characters. Field renamed because it ended with '_'.
    eenheid = models.TextField(blank=True, null=True)
    plannr = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'planex'
